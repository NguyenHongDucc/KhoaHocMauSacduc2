import streamlit as st
from PIL import Image
import numpy as np
import matplotlib.pyplot as plt
from collections import Counter
import matplotlib.pyplot as plt

#h√¨nh background


def analyze_image_colors(image):
    # Chuy·ªÉn h√¨nh ·∫£nh sang ch·∫ø ƒë·ªô RGB
    image = image.convert("RGB")

    # L·∫•y k√≠ch th∆∞·ªõc h√¨nh ·∫£nh
    width, height = image.size
    total_pixels = width * height

    # Kh·ªüi t·∫°o b·ªô ƒë·∫øm cho c√°c m√†u R, G, B
    r_count = 0
    g_count = 0
    b_count = 0

    # Duy·ªát qua t·ª´ng pixel v√† ƒë·∫øm s·ªë l·∫ßn xu·∫•t hi·ªán c·ªßa c√°c m√†u R, G, B
    for x in range(width):
        for y in range(height):
            r, g, b = image.getpixel((x, y))

            # ƒê·∫øm s·ªë pixel c√≥ m√†u ƒë·ªè, xanh l√°, v√† xanh d∆∞∆°ng
            r_count += r > g and r > b  # ƒê·∫øm pixel c√≥ m√†u ƒë·ªè nhi·ªÅu nh·∫•t
            g_count += g > r and g > b  # ƒê·∫øm pixel c√≥ m√†u xanh l√° nhi·ªÅu nh·∫•t
            b_count += b > r and b > g  # ƒê·∫øm pixel c√≥ m√†u xanh d∆∞∆°ng nhi·ªÅu nh·∫•t

    # T√≠nh ph·∫ßn trƒÉm m·ªói m√†u
    r_percentage = (r_count / total_pixels) * 100
    g_percentage = (g_count / total_pixels) * 100
    b_percentage = (b_count / total_pixels) * 100

    # Tr·∫£ v·ªÅ ph·∫ßn trƒÉm
    return r_percentage, g_percentage, b_percentage

# Giao di·ªán Streamlit
st.title("Ph√¢n t√≠ch t·ªâ l·ªá 3 m√†u R, G, B trong h√¨nh ·∫£nh")
st.write("T·∫£i l√™n h√¨nh ·∫£nh c·ªßa b·∫°n ƒë·ªÉ ph√¢n t√≠ch ph·∫ßn trƒÉm ba m√†u ƒë·ªè, xanh l√°, xanh d∆∞∆°ng.")

# T·∫£i h√¨nh ·∫£nh t·ª´ m√°y t√≠nh
uploaded_image = st.file_uploader("Ch·ªçn h√¨nh ·∫£nh", type=["jpg", "png", "jpeg"])

if uploaded_image is not None:
    # M·ªü h√¨nh ·∫£nh ƒë√£ t·∫£i l√™n
    image = Image.open(uploaded_image)

    # Hi·ªÉn th·ªã h√¨nh ·∫£nh l√™n giao di·ªán
    st.image(image, caption='H√¨nh ·∫£nh ƒë√£ t·∫£i l√™n', use_container_width=True)

    # Ph√¢n t√≠ch v√† t√≠nh to√°n ph·∫ßn trƒÉm c√°c m√†u
    r_percentage, g_percentage, b_percentage = analyze_image_colors(image)

    # Hi·ªÉn th·ªã k·∫øt qu·∫£ ph·∫ßn trƒÉm m√†u s·∫Øc
    st.subheader("Ph·∫ßn trƒÉm m√†u s·∫Øc:")
    st.write(f"Ph·∫ßn trƒÉm m√†u ƒë·ªè (R): {r_percentage:.2f}%")
    st.write(f"Ph·∫ßn trƒÉm m√†u xanh l√° (G): {g_percentage:.2f}%")
    st.write(f"Ph·∫ßn trƒÉm m√†u xanh d∆∞∆°ng (B): {b_percentage:.2f}%")

    # T·∫°o bi·ªÉu ƒë·ªì h√¨nh tr√≤n ƒë·ªÉ hi·ªÉn th·ªã ph·∫ßn trƒÉm m√†u s·∫Øc
    colors = ['Red', 'Green', 'Blue']
    percentages = [r_percentage, g_percentage, b_percentage]

    # V·∫Ω ƒë·ªì th·ªã h√¨nh tr√≤n v·ªõi n·ªÅn m√†u tr·∫Øng
    fig, ax = plt.subplots()
    wedges, texts, autotexts = ax.pie(percentages, labels=colors, autopct='%1.1f%%', colors=['red', 'green', 'blue'], startangle=90, wedgeprops={'edgecolor': 'black'})

    # Th√™m ti√™u ƒë·ªÅ cho ƒë·ªì th·ªã v·ªõi m√†u tr·∫Øng
    ax.set_title("Ph·∫ßn trƒÉm m√†u s·∫Øc trong h√¨nh ·∫£nh", color='white')

    # Thi·∫øt l·∫≠p n·ªÅn c·ªßa ƒë·ªì th·ªã th√†nh m√†u tr·∫Øng
    fig.patch.set_facecolor('white')  # N·ªÅn tr·∫Øng cho ƒë·ªì th·ªã

    # V·∫Ω c√°c √¥ m√†u t∆∞∆°ng ·ª©ng v·ªõi c√°c m√†u s·∫Øc
    legend_colors = ['red', 'green', 'blue']
    legend_labels = ['Red', 'Green', 'Blue']

    # V·∫Ω c√°c √¥ m√†u v√† ch·ªØ t∆∞∆°ng ·ª©ng b√™n ngo√†i bi·ªÉu ƒë·ªì
    for i, (label, color) in enumerate(zip(legend_labels, legend_colors)):
        ax.add_patch(plt.Rectangle((1.2, 1 - 0.1 * i), 0.05, 0.05, color=color))  # V·∫Ω √¥ m√†u
        ax.text(1.3, 1 - 0.1 * i, f"{label}", color='white', fontsize=12, ha='left')  # V·∫Ω ch·ªØ v·ªõi m√†u tr·∫Øng

    
    st.pyplot(fig, transparent=True)
import streamlit as st
from PIL import Image
from collections import Counter
import numpy as np
import matplotlib.pyplot as plt

def rgb_to_hex(rgb):
    return '#{:02x}{:02x}{:02x}'.format(*rgb)

def extract_colors(image, num_colors=10):
    image = image.convert('RGB')
    img_array = np.array(image)
    pixels = img_array.reshape(-1, 3)
    counter = Counter(map(tuple, pixels))
    most_common = counter.most_common(num_colors)
    total_pixels = sum(counter.values())
    return [(color, count / total_pixels) for color, count in most_common]

def display_color_palette(colors):
    st.markdown("### üé® B·∫£ng m√†u ph·ªï bi·∫øn trong ·∫£nh:")
    for color, ratio in colors:
        hex_color = rgb_to_hex(color)
        st.markdown(
            f'<div style="display: flex; align-items: center; margin-bottom: 8px;">'
            f'<div style="width: 40px; height: 40px; background-color: {hex_color}; border: 1px solid #000;"></div>'
            f'<div style="margin-left: 10px;">M√£ m√†u: <b>{hex_color}</b> | T·ªâ l·ªá: <b>{ratio:.2%}</b></div>'
            f'</div>',
            unsafe_allow_html=True
        )

def main():
    st.title("üîç Ph√¢n t√≠ch c√°c m√£ m√†u d√πng trong h√¨nh ·∫£nh")
    uploaded_file = st.file_uploader("T·∫£i l√™n h√¨nh ·∫£nh (PNG, JPG, JPEG)", type=["png", "jpg", "jpeg"])

    if uploaded_file is not None:
        image = Image.open(uploaded_file)
        st.image(image, caption="H√¨nh ·∫£nh g·ªëc", use_container_width=True)

        num_colors = st.slider("S·ªë l∆∞·ª£ng m√†u ph·ªï bi·∫øn c·∫ßn ph√¢n t√≠ch", 3, 20, 8)
        colors = extract_colors(image, num_colors=num_colors)
        display_color_palette(colors)

if __name__ == "__main__":
    main()
def set_background_image():
    st.markdown(
        f"""
        <style>
        [data-testid="stAppViewContainer"] {{
            background-image: url("https://cbeditz.com/public/cbeditz/large/black-gold-youtube-gaming-banner-background-free-images-9ynh0xq2mg.jpg");
            background-size: cover;
            background-repeat: no-repeat;
            background-position: center;
        }}
        </style>
        """,
        unsafe_allow_html=True
    )

set_background_image()
import streamlit as st

st.logo(
    image="https://fgam.hcmute.edu.vn/Resources/Images/SubDomain/fgam/Logo%20khoa/Logo_FGAM.png",  
    size="large", 
    icon_image="https://fgam.hcmute.edu.vn/Resources/Images/SubDomain/fgam/CIP%20FGAM-01.jpg"  
)
import streamlit as st

# Hi·ªÉn th·ªã logo trong sidebar v·ªõi chi·ªÅu r·ªông 150px
st.sidebar.image("https://fgam.hcmute.edu.vn/Resources/Images/SubDomain/fgam/Logo%20khoa/Logo_FGAM.png", width=150)





